knitr::opts_chunk$set(echo = TRUE)
set.seed(12314159)
# path helper
path_concat <- function(path1, path2, sep="/") {paste(path1, path2, sep = sep)}
mainDirectory <- "/Users/rwoldford/Documents/Admin/courses/Data\ Visualization/Assignments/Winter19/Assignment\ 6"
imageDirectory <- path_concat(mainDirectory, "img")
RDirectory <- path_concat(mainDirectory, "R")
dataDirectory <- path_concat(mainDirectory, "Data")
library("glyphs")
library("glyphs")
install.packages("glyphs")
install.packages("glyphs")
install.packages("glyphs")
install.packages("C:\Users\VIVRE\Desktop\Dulcinea\stat442R\a6", repos=NULL, type="source")
install.packages("C:\\Users\\VIVRE\\Desktop\\Dulcinea\\stat442R\\a6\\glyphs_0.1.1.tar.gz", repos=NULL, type="source")
install.packages("tiff")
install.packages("pixmap")
install.packages("C:\\Users\\VIVRE\\Desktop\\Dulcinea\\stat442R\\a6\\glyphs_0.1.1.tar.gz", repos=NULL, type="source")
library("glyphs")
library("qrmdata")
summary(SP500_omitNA)
library(qrmdata)
data("SP500_const") # load the constituents data from qrmdata
data("SP500_const") # load the constituents data from qrmdata
time <- c("2007-01-03", "2009-12-31") # specify time period
time <- c("2007-01-03", "2009-12-31") # specify time period
data_sp500 <- SP500_const[paste0(time, collapse = "/"),] # grab out data
data_sp500 <- SP500_const[paste0(time, collapse = "/"),] # grab out data
cases <- complete.cases(t(data_sp500))
x <- t(na.omit(t(data_sp500))) # omit the missing data
SP500_omitNA <- split(x,col(x)) # split the data into list
summary(SP500_omitNA)
SP500_omitNA
summary(SP500_const)
library(qrmdata)
data("SP500_const") # load the constituents data from qrmdata
time <- c("2007-01-03", "2009-12-31") # specify time period
data_sp500 <- SP500_const[paste0(time, collapse = "/"),] # grab out data
cases <- complete.cases(t(data_sp500))
x <- t(na.omit(t(data_sp500))) # omit the missing data
SP500_omitNA <- split(x,col(x)) # split the data into list
aveSelection <- function(data, selection) {
# selection is a subset of indices whose
# values are to be extracted from the data
# and averaged.
n <- length(selection)
ave <- Reduce("+", data[selection])/n
# return ave
ave
}
aveAllComplete <- aveSelection(SP500_omitNA, 1:length(SP500_omitNA))
aveAllComplete
head(aveAllComplete)
locateSector <- function(sectorInfo, sector) {which(sectorInfo == sector)}
head(locateSector(SP500_const_info$Sector, "Financials"))
levels(SP500_const_info$Sector)
unique( SP500_const_info$Sector)
SP500_const_info$Sector
SP500_const_info$Sector
SP500_const_info$Sector
sectors = unique( SP500_const_info$Sector)
inds = list()
for (i in length(sectors)){
sec = sectors[i]
list[[i]] = locateSector(SP500_const_info$Sector, sec)
}
head(locateSector(SP500_const_info$Sector[cases], "Financials"))
SP500_const_info$Sector[cases]
SP500_const_info$Sector
list[[i]] = locateSector(SP500_const_info$Sector, sec)
locateSector(SP500_const_info$Sector, sec)
sectors = unique( SP500_const_info$Sector)
inds = list()
for (i in 1:length(sectors)){
sec = sectors[i]
list[[i]] = locateSector(SP500_const_info$Sector, sec)
}
i=1
sec = sectors[i]
list[[i]] = locateSector(SP500_const_info$Sector, sec)
inds = list()
for (i in 1:length(sectors)){
sec = sectors[i]
inds[[i]] = locateSector(SP500_const_info$Sector, sec)
}
inds
SP500_omitNA[1]
aveSelection <- function(data, selection) {
# selection is a subset of indices whose
# values are to be extracted from the data
# and averaged.
n <- length(selection)
ave <- Reduce("+", data[selection])/n
# return ave
ave
}
aveAllComplete <- aveSelection(SP500_omitNA, 1:length(SP500_omitNA))
aveAllComplete
sec.avgs = list()
for (i in 1:length(sectors)){
sec = sectors[i]
inds[[i]] = locateSector(SP500_const_info$Sector, sec)
sec.avgs[[i]] = aveSelection(SP500_omitNA, inds[[i]])
}
sec.avgs
sectors = unique( SP500_const_info$Sector)
inds = list()
sec.avgs = list()
i
i=1
sec = sectors[i]
inds[[i]] = locateSector(SP500_const_info$Sector, sec)
inds
aveSelection(SP500_omitNA, inds[[i]])
inds[[i]]
SP500_omitNA
aveSelection(SP500_omitNA, 1:length(SP500_omitNA))
aveSelection
inds[[i]]
inds[[1]]
aveSelection(SP500_omitNA, inds[[1]])
aveSelection(SP500_omitNA, c(2,34,5))
aveSelection(SP500_omitNA, c(2,34,5))
aveSelection
SP500_omitNA
type(inds[[i]])
str(inds[[i]])
str(c(2,32,3))
sectors = unique( SP500_const_info$Sector)
inds = list()
sec.avgs = list()
for (i in 1:length(sectors)){
sec = sectors[i]
inds = locateSector(SP500_const_info$Sector, sec)
sec.avgs[[i]] = aveSelection(SP500_omitNA, inds)
}
inds[[1]]
sec.avgs
aveSelection(SP500_omitNA, inds)
inds
aveSelection(SP500_omitNA, c(2,96,202))
inds
aveSelection(SP500_omitNA, c(50,96,202,272,473))
aveSelection(SP500_omitNA, c(50,96,202,473))
aveSelection(SP500_omitNA, c(50,96,202))
length(SP500_const)
length(SP500_omitNA)
inds
length(SP500_const_info)
length(SP500_const_info[[1]])
length(SP500_const_info[[2]])
knitr::opts_chunk$set(echo = TRUE)
set.seed(12314159)
# path helper
path_concat <- function(path1, path2, sep="/") {paste(path1, path2, sep = sep)}
mainDirectory <- "/Users/rwoldford/Documents/Admin/courses/Data\ Visualization/Assignments/Winter19/Assignment\ 6"
imageDirectory <- path_concat(mainDirectory, "img")
RDirectory <- path_concat(mainDirectory, "R")
dataDirectory <- path_concat(mainDirectory, "Data")
library(qrmdata)
data("SP500_const") # load the constituents data from qrmdata
time <- c("2007-01-03", "2009-12-31") # specify time period
data_sp500 <- SP500_const[paste0(time, collapse = "/"),] # grab out data
cases <- complete.cases(t(data_sp500))
x <- t(na.omit(t(data_sp500))) # omit the missing data
SP500_omitNA <- split(x,col(x)) # split the data into list
aveSelection <- function(data, selection) {
# selection is a subset of indices whose
# values are to be extracted from the data
# and averaged.
n <- length(selection)
ave <- Reduce("+", data[selection])/n
# return ave
ave
}
aveAllComplete <- aveSelection(SP500_omitNA, 1:length(SP500_omitNA))
head(aveAllComplete)
locateSector <- function(sectorInfo, sector) {which(sectorInfo == sector)}
head(locateSector(SP500_const_info$Sector, "Financials"))
head(locateSector(SP500_const_info$Sector[cases], "Financials"))
length(SP500_const)
length(SP500_omitNA)
length(SP500_const_info[[2]])
SP500_const_info[[2]]
length(SP500_const)
SP500_const
typeof(SP500_const)
mean(SP500_const)
SP500_const[1]
SP500_const[1,2]
ncol(SP500_const)
time <- c("2007-01-03", "2009-12-31") # specify time period
data_sp500 <- SP500_const[paste0(time, collapse = "/"),] # grab out data
cases <- complete.cases(t(data_sp500))
cases
for (i in 1:length(sectors)){
sec = sectors[i]
inds = locateSector(SP500_const_info[cases]$Sector, sec)
sec.avgs[[i]] = aveSelection(SP500_omitNA, inds)
}
SP500_const_info[cases]
locateSector(SP500_const_info[cases]$Sector, sec)
head(locateSector(SP500_const_info$Sector[cases], "Financials"))
inds = locateSector(SP500_const_info$Sector[cases], sec)
for (i in 1:length(sectors)){
sec = sectors[i]
inds = locateSector(SP500_const_info$Sector[cases], sec)
sec.avgs[[i]] = aveSelection(SP500_omitNA, inds)
}
inds[[1]]
sectors = unique( SP500_const_info$Sector)
inds = list()
sec.avgs = list()
for (i in 1:length(sectors)){
sec = sectors[i]
inds = locateSector(SP500_const_info$Sector[cases], sec)
sec.avgs[[i]] = aveSelection(SP500_omitNA, inds)
}
inds[[1]]
inds
sec.avgs
make_glyphs(SP500_omitNA, glyph_type = "Hilbert", origin = "mean", col=cols)
library(colorspace)
cols = rev(diverge_hcl(21))
make_glyphs(SP500_omitNA, glyph_type = "Hilbert", origin = "mean", col=cols)
make_glyphs(SP500_omitNA, glyph_type = "Hilbert", origin = "mean", col=cols)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
library(loon); library(PairViz)
x <- prcomp(lepto)$x
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
library(loon.data); data("lepto")
data = read.csv("groupind.csv")
library(loon.data); data("crabSpecies")
col = adjustcolor( data$group1a * 1 + data$group1b * 2 + data$group2a * 3+ data$group2b * 4, alpha.f = 0.5)
pairs(lepto, col=col, pch=19)
pairs(procomp(lepto))
pairs(prcomp(lepto))
library(loon.data); data("lepto")
data = read.csv("groupind.csv")
library(loon.data); data("crabSpecies")
col = adjustcolor( data$group1a * 1 + data$group1b * 2 + data$group2a * 3+ data$group2b * 4, alpha.f = 0.5)
pairs(lepto, col=col, pch=19)
pairs(prcomp(lepto))
prcomp(lepto)
data.frame( prcomp(lepto))
prcomp(lepto)x
lepto
prcomp(lepto)$x
data = read.csv("groupind.csv")
library(loon.data); data("crabSpecies")
col = adjustcolor( data$group1a * 1 + data$group1b * 2 + data$group2a * 3+ data$group2b * 4, alpha.f = 0.5)
pairs(lepto, col=col, pch=19)
pairs(prcomp(lepto))
data = read.csv("groupind.csv")
library(loon.data); data("crabSpecies")
col = adjustcolor( data$group1a * 1 + data$group1b * 2 + data$group2a * 3+ data$group2b * 4, alpha.f = 0.5)
pairs(lepto, col=col, pch=19)
pairs(prcomp(lepto)$x)
pairs(prcomp(lepto)$x, col=col, pch=19)
pairs(prcomp(lepto)$x, col=col, pch=19)
